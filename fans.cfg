#https://forum.vorondesign.com/threads/new-temperature_combined-feature-in-klipper-to-cool-the-voron-0.928/
#####################################################################
#      Temperature Sensors
#####################################################################
[temperature_sensor SKR_Pico]
sensor_type: temperature_mcu


[temperature_sensor Raspberry_Pi]
sensor_type: temperature_host


#####################################################################
# Processor Fan Control
#####################################################################
[temperature_fan processors_maximum]
pin: gpio20                                                       # the fan control pin (must be a mosfet or a pwm fan)
control: watermark                                                # the type of hysteresis we are using
max_delta: 3.0                                                    # fan turns on/off at 3Â° over/under target_temp
sensor_type: temperature_combined                                 # new temperature type
sensor_list: temperature_sensor SKR_Pico, temperature_sensor Raspberry_Pi
combination_method: max                                           # use the maximum reading of the sensors
maximum_deviation: 999.9                                          # we don't care about the difference in temperature
max_temp: 85                                                      # just the valid temperature ranges
min_temp: 0
target_temp: 57.0                                                 # the initial target temperature for the fan
max_speed: 1.0
min_speed: 0.3


[temperature_fan Raspberry_Pi]
pin:                                # Pin number that your fan is plugged into
sensor_type: temperature_host       # This is where the temp comes from, in this instance the RasPi
control: watermark                  # This prevents the need for PID control
max_power: 0.5                     # Number between 0 & 1, lower to slow the fan down and reduce noise, but also airflow.
cycle_time: 0.010
target_temp: 50                     # Temp you want the fan to kick in
min_temp: 10                        # Required for sanity check
max_temp: 100                       # Required for sanity check
shutdown_speed: 0                   # 0 = No fan when printer shuts down, 1 = fan comes on when printer shuts down. Max Speed must be 1 if turning this on, or klipper will throw an error.

## You must comment out exisiting temp sensor for RasPi for the above to work, like in the example below ##

#[temperature_sensor Raspberry_Pi]
#sensor_type: temperature_host
#min_temp: 10
#max_temp: 100